name: Build and Release

on:
  workflow_dispatch: 
    
  push:
    tags:
      - '*'

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.nuget/packages
            ~/.dotnet
          key: ${{ runner.os }}-dotnet-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-dotnet-

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build for Linux
        run: dotnet publish -c Release -r linux-x64 --self-contained

      - name: Upload Linux release
        uses: actions/upload-artifact@v2
        with:
          name: linux-release
          path: bin/Release/net8.0/linux-x64/publish

      - name: Build for Windows
        run: dotnet publish -c Release -r win-x64 --self-contained

      - name: Upload Windows release
        uses: actions/upload-artifact@v2
        with:
          name: windows-release
          path: bin/Release/net8.0/win-x64/publish

      - name: Build for macOS
        run: dotnet publish -c Release -r osx-x64 --self-contained

      - name: Upload macOS release
        uses: actions/upload-artifact@v2
        with:
          name: macos-release
          path: bin/Release/net8.0/osx-x64/publish
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Linux release to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/Release/net8.0/linux-x64/publish/*
          asset_name: linux-release.zip
          asset_content_type: application/zip
      - name: Upload Windows release to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/Release/net8.0/win-x64/publish/*
          asset_name: windows-release.zip
          asset_content_type: application/zip
      - name: Upload macOS release to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/Release/net8.0/osx-x64/publish/*
          asset_name: macos-release.zip
          asset_content_type: application/zip